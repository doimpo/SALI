---
import { generateLanguageSwitcherData, getCurrentLanguage } from '../utils/get-localized-path';
import { translationConfig } from '../i18n/config';

// Get current language from URL
const currentLanguage = getCurrentLanguage(Astro.url.pathname);
const currentPath = Astro.url.pathname.replace(/^\/[a-z]{2}(\/|$)/, '/');

// Generate language switcher data
const languageData = generateLanguageSwitcherData(currentPath);
---

<div class="language-switcher">
  <div class="language-switcher__current">
    <button 
      class="language-switcher__trigger" 
      type="button" 
      aria-expanded="false" 
      aria-haspopup="true"
      data-language-switcher-trigger
    >
      <span class="language-switcher__flag">{languageData.find(lang => lang.code === currentLanguage)?.flag || 'üåê'}</span>
      <span class="language-switcher__name">{languageData.find(lang => lang.code === currentLanguage)?.nativeName || 'English'}</span>
      <i class="fas fa-chevron-down language-switcher__icon"></i>
    </button>
  </div>
  
  <div class="language-switcher__dropdown" data-language-switcher-dropdown>
    <ul class="language-switcher__list" role="menu">
      {languageData.map(language => (
        <li class="language-switcher__item" role="none">
          <a 
            href={language.url}
            class={`language-switcher__link ${language.code === currentLanguage ? 'language-switcher__link--active' : ''}`}
            role="menuitem"
            hreflang={language.code}
            data-language={language.code}
          >
            <span class="language-switcher__flag">{language.flag}</span>
            <span class="language-switcher__name">{language.nativeName}</span>
            <span class="language-switcher__code">({language.code.toUpperCase()})</span>
          </a>
        </li>
      ))}
    </ul>
  </div>
</div>

<style>
  .language-switcher {
    position: relative;
    display: inline-block;
  }
  
  .language-switcher__trigger {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 12px;
    background: transparent;
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 6px;
    color: #fff;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .language-switcher__trigger:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.3);
  }
  
  .language-switcher__trigger[aria-expanded="true"] {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.3);
  }
  
  .language-switcher__trigger[aria-expanded="true"] .language-switcher__icon {
    transform: rotate(180deg);
  }
  
  .language-switcher__flag {
    font-size: 16px;
  }
  
  .language-switcher__name {
    font-weight: 500;
  }
  
  .language-switcher__icon {
    font-size: 12px;
    transition: transform 0.3s ease;
  }
  
  .language-switcher__dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    min-width: 200px;
    background: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.3s ease;
    z-index: 1000;
  }
  
  .language-switcher__dropdown[data-open="true"] {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }
  
  .language-switcher__list {
    list-style: none;
    margin: 0;
    padding: 8px 0;
  }
  
  .language-switcher__item {
    margin: 0;
  }
  
  .language-switcher__link {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 10px 16px;
    color: #333;
    text-decoration: none;
    font-size: 14px;
    transition: background-color 0.2s ease;
  }
  
  .language-switcher__link:hover {
    background: #f5f5f5;
  }
  
  .language-switcher__link--active {
    background: #e3f2fd;
    color: #1976d2;
    font-weight: 500;
  }
  
  .language-switcher__code {
    margin-left: auto;
    font-size: 12px;
    color: #666;
    font-weight: 400;
  }
  
  /* Dark theme support */
  .header--dark .language-switcher__trigger {
    color: #fff;
    border-color: rgba(255, 255, 255, 0.2);
  }
  
  .header--dark .language-switcher__trigger:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.3);
  }
  
  /* Mobile responsive */
  @media (max-width: 768px) {
    .language-switcher__dropdown {
      right: -10px;
      min-width: 180px;
    }
    
    .language-switcher__trigger {
      padding: 6px 10px;
      font-size: 13px;
    }
    
    .language-switcher__name {
      display: none;
    }
  }
  
  /* RTL support */
  [dir="rtl"] .language-switcher__dropdown {
    right: auto;
    left: 0;
  }
  
  [dir="rtl"] .language-switcher__code {
    margin-left: 0;
    margin-right: auto;
  }
</style>

<script>
  // Language switcher functionality
  document.addEventListener('DOMContentLoaded', function() {
    const trigger = document.querySelector('[data-language-switcher-trigger]');
    const dropdown = document.querySelector('[data-language-switcher-dropdown]');
    
    if (!trigger || !dropdown) return;
    
    // Toggle dropdown
    trigger.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      
      const isOpen = trigger.getAttribute('aria-expanded') === 'true';
      
      if (isOpen) {
        closeDropdown();
      } else {
        openDropdown();
      }
    });
    
    // Close dropdown when clicking outside
    document.addEventListener('click', function(e) {
      if (!trigger.contains(e.target) && !dropdown.contains(e.target)) {
        closeDropdown();
      }
    });
    
    // Close dropdown on escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        closeDropdown();
      }
    });
    
    // Handle keyboard navigation
    const links = dropdown.querySelectorAll('.language-switcher__link');
    let currentIndex = -1;
    
    trigger.addEventListener('keydown', function(e) {
      if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        openDropdown();
        if (links.length > 0) {
          currentIndex = 0;
          links[currentIndex].focus();
        }
      }
    });
    
    dropdown.addEventListener('keydown', function(e) {
      switch(e.key) {
        case 'ArrowDown':
          e.preventDefault();
          currentIndex = Math.min(currentIndex + 1, links.length - 1);
          links[currentIndex].focus();
          break;
        case 'ArrowUp':
          e.preventDefault();
          currentIndex = Math.max(currentIndex - 1, 0);
          links[currentIndex].focus();
          break;
        case 'Escape':
          closeDropdown();
          trigger.focus();
          break;
        case 'Tab':
          closeDropdown();
          break;
      }
    });
    
    function openDropdown() {
      trigger.setAttribute('aria-expanded', 'true');
      dropdown.setAttribute('data-open', 'true');
      trigger.classList.add('language-switcher__trigger--active');
    }
    
    function closeDropdown() {
      trigger.setAttribute('aria-expanded', 'false');
      dropdown.setAttribute('data-open', 'false');
      trigger.classList.remove('language-switcher__trigger--active');
      currentIndex = -1;
    }
    
    // Handle language selection
    links.forEach(link => {
      link.addEventListener('click', function(e) {
        // Let the link navigate naturally
        // The page will reload with the new language
      });
    });
  });
</script>
