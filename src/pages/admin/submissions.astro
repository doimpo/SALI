---
/**
 * Admin Dashboard - View Form Submissions
 * Protected route for viewing and managing form submissions
 */
---
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Submissions - SALi Admin Dashboard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background: #f1f5f9;
            color: #1e293b;
        }
        
        .dashboard-header {
            background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 100%);
            color: white;
            padding: 20px 30px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        .header-content {
            max-width: 1400px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .header-title h1 {
            font-size: 24px;
            margin-bottom: 5px;
        }
        
        .header-title p {
            font-size: 14px;
            opacity: 0.9;
        }
        
        .header-actions button {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
            padding: 8px 16px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            margin-left: 10px;
            transition: all 0.3s;
        }
        
        .header-actions button:hover {
            background: rgba(255, 255, 255, 0.3);
        }
        
        .dashboard-content {
            max-width: 1400px;
            margin: 30px auto;
            padding: 0 30px;
        }
        
        .filters {
            background: white;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }
        
        .filters h3 {
            margin-bottom: 15px;
            color: #1e3a8a;
        }
        
        .filter-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .filter-group label {
            display: block;
            margin-bottom: 5px;
            font-size: 13px;
            font-weight: 500;
            color: #64748b;
        }
        
        .filter-group input,
        .filter-group select {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #e2e8f0;
            border-radius: 6px;
            font-size: 14px;
        }
        
        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }
        
        .stat-card h4 {
            color: #64748b;
            font-size: 13px;
            font-weight: 500;
            margin-bottom: 10px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .stat-card .value {
            font-size: 32px;
            font-weight: 700;
            color: #1e3a8a;
        }
        
        .submissions-list {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            overflow: hidden;
        }
        
        .submission-item {
            padding: 20px;
            border-bottom: 1px solid #e2e8f0;
            transition: background 0.2s;
        }
        
        .submission-item:hover {
            background: #f8fafc;
        }
        
        .submission-item:last-child {
            border-bottom: none;
        }
        
        .submission-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
        }
        
        .submission-meta {
            flex: 1;
        }
        
        .submission-id {
            font-size: 12px;
            color: #94a3b8;
            margin-bottom: 5px;
        }
        
        .submission-name {
            font-size: 18px;
            font-weight: 600;
            color: #1e293b;
            margin-bottom: 5px;
        }
        
        .submission-time {
            font-size: 13px;
            color: #64748b;
        }
        
        .submission-badges {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }
        
        .badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }
        
        .badge-urgent {
            background: #fee2e2;
            color: #991b1b;
        }
        
        .badge-routine {
            background: #dcfce7;
            color: #166534;
        }
        
        .badge-location {
            background: #dbeafe;
            color: #1e40af;
        }
        
        .badge-form-type {
            background: #f3e8ff;
            color: #6b21a8;
        }
        
        .submission-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }
        
        .detail-item {
            font-size: 14px;
        }
        
        .detail-label {
            color: #64748b;
            font-weight: 500;
            margin-bottom: 3px;
        }
        
        .detail-value {
            color: #1e293b;
        }
        
        .loading {
            text-align: center;
            padding: 60px 20px;
            color: #64748b;
        }
        
        .error {
            background: #fee2e2;
            color: #991b1b;
            padding: 20px;
            border-radius: 12px;
            margin: 20px 0;
        }
        
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #64748b;
        }
        
        .empty-state h3 {
            margin-bottom: 10px;
        }
        
        @media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                gap: 15px;
            }
            
            .filter-row {
                grid-template-columns: 1fr;
            }
            
            .submission-header {
                flex-direction: column;
                gap: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-header">
        <div class="header-content">
            <div class="header-title">
                <h1>🩺 SALi Admin Dashboard</h1>
                <p>Form Submissions Management</p>
            </div>
            <div class="header-actions">
                <button onclick="refreshData()">🔄 Refresh</button>
                <button onclick="exportToCSV()">📥 Export CSV</button>
                <button onclick="logout()">🚪 Logout</button>
            </div>
        </div>
    </div>
    
    <div class="dashboard-content">
        <div class="filters">
            <h3>Filters</h3>
            <div class="filter-row">
                <div class="filter-group">
                    <label>Search</label>
                    <input type="text" id="searchInput" placeholder="Name, email, phone..." />
                </div>
                <div class="filter-group">
                    <label>Form Type</label>
                    <select id="formTypeFilter">
                        <option value="">All Forms</option>
                        <option value="appointment">Appointments</option>
                        <option value="contact">Contact</option>
                        <option value="inquiry">Inquiries</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label>Urgency</label>
                    <select id="urgencyFilter">
                        <option value="">All</option>
                        <option value="urgent">Urgent</option>
                        <option value="routine">Routine</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label>Location</label>
                    <select id="locationFilter">
                        <option value="">All Locations</option>
                        <option value="hyderabad">Hyderabad</option>
                        <option value="mumbai">Mumbai</option>
                        <option value="kolkata">Kolkata</option>
                    </select>
                </div>
            </div>
        </div>
        
        <div class="stats">
            <div class="stat-card">
                <h4>Total Submissions</h4>
                <div class="value" id="totalCount">-</div>
            </div>
            <div class="stat-card">
                <h4>Today</h4>
                <div class="value" id="todayCount">-</div>
            </div>
            <div class="stat-card">
                <h4>Urgent</h4>
                <div class="value" id="urgentCount">-</div>
            </div>
            <div class="stat-card">
                <h4>This Week</h4>
                <div class="value" id="weekCount">-</div>
            </div>
        </div>
        
        <div class="submissions-list" id="submissionsList">
            <div class="loading">
                <p>Loading submissions...</p>
            </div>
        </div>
    </div>
    
    <script>
        // Check authentication
        const auth = sessionStorage.getItem('adminAuth');
        if (!auth) {
            window.location.href = '/admin/login';
        }
        
        let allSubmissions = [];
        let filteredSubmissions = [];
        
        async function loadSubmissions() {
            try {
                const response = await fetch('/netlify/functions/get-submissions', {
                    headers: {
                        'Authorization': `Basic ${auth}`
                    }
                });
                
                if (!response.ok) {
                    if (response.status === 401) {
                        logout();
                        return;
                    }
                    throw new Error('Failed to load submissions');
                }
                
                const data = await response.json();
                allSubmissions = data.submissions || [];
                filteredSubmissions = allSubmissions;
                
                updateStats();
                renderSubmissions();
                
            } catch (error) {
                document.getElementById('submissionsList').innerHTML = `
                    <div class="error">
                        <strong>Error:</strong> ${error.message}
                        <br><br>
                        <small>Please ensure you have configured NETLIFY_SITE_ID and NETLIFY_FORM_API_KEY environment variables.</small>
                    </div>
                `;
            }
        }
        
        function updateStats() {
            const today = new Date().toDateString();
            const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
            
            document.getElementById('totalCount').textContent = allSubmissions.length;
            document.getElementById('todayCount').textContent = allSubmissions.filter(s => 
                new Date(s.created_at).toDateString() === today
            ).length;
            document.getElementById('urgentCount').textContent = allSubmissions.filter(s => 
                s.aiTags?.urgency === 'urgent'
            ).length;
            document.getElementById('weekCount').textContent = allSubmissions.filter(s => 
                new Date(s.created_at) >= weekAgo
            ).length;
        }
        
        function renderSubmissions() {
            const container = document.getElementById('submissionsList');
            
            if (filteredSubmissions.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <h3>No submissions found</h3>
                        <p>There are no form submissions matching your filters.</p>
                    </div>
                `;
                return;
            }
            
            container.innerHTML = filteredSubmissions.map(sub => {
                const date = new Date(sub.created_at).toLocaleString();
                const urgency = sub.aiTags?.urgency || 'routine';
                const location = sub.data.location || sub.data['form-location'] || 'Not specified';
                const formType = sub.form_name.split('-')[0] || 'contact';
                
                return `
                    <div class="submission-item">
                        <div class="submission-header">
                            <div class="submission-meta">
                                <div class="submission-id">#${sub.number || sub.id}</div>
                                <div class="submission-name">${sub.data['contact-name'] || sub.name || 'No name'}</div>
                                <div class="submission-time">📅 ${date}</div>
                            </div>
                            <div class="submission-badges">
                                <span class="badge badge-${urgency}">${urgency.toUpperCase()}</span>
                                <span class="badge badge-location">📍 ${location}</span>
                                <span class="badge badge-form-type">${formType}</span>
                            </div>
                        </div>
                        <div class="submission-details">
                            <div class="detail-item">
                                <div class="detail-label">Email</div>
                                <div class="detail-value">${sub.data['contact-email'] || sub.email || 'N/A'}</div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Phone</div>
                                <div class="detail-value">${sub.data['contact-phone'] || 'N/A'}</div>
                            </div>
                            ${sub.data['contact-date'] ? `
                            <div class="detail-item">
                                <div class="detail-label">Appointment Date</div>
                                <div class="detail-value">${sub.data['contact-date']} ${sub.data['contact-time'] || ''}</div>
                            </div>
                            ` : ''}
                            ${sub.data['contact-message'] ? `
                            <div class="detail-item" style="grid-column: 1 / -1;">
                                <div class="detail-label">Message</div>
                                <div class="detail-value">${sub.data['contact-message']}</div>
                            </div>
                            ` : ''}
                        </div>
                    </div>
                `;
            }).join('');
        }
        
        function applyFilters() {
            const search = document.getElementById('searchInput').value.toLowerCase();
            const formType = document.getElementById('formTypeFilter').value;
            const urgency = document.getElementById('urgencyFilter').value;
            const location = document.getElementById('locationFilter').value;
            
            filteredSubmissions = allSubmissions.filter(sub => {
                const matchesSearch = !search || 
                    (sub.data['contact-name'] || '').toLowerCase().includes(search) ||
                    (sub.data['contact-email'] || '').toLowerCase().includes(search) ||
                    (sub.data['contact-phone'] || '').toLowerCase().includes(search);
                
                const matchesFormType = !formType || sub.form_name.includes(formType);
                const matchesUrgency = !urgency || sub.aiTags?.urgency === urgency;
                const matchesLocation = !location || (sub.data.location || sub.data['form-location']) === location;
                
                return matchesSearch && matchesFormType && matchesUrgency && matchesLocation;
            });
            
            renderSubmissions();
        }
        
        function refreshData() {
            document.getElementById('submissionsList').innerHTML = '<div class="loading"><p>Refreshing...</p></div>';
            loadSubmissions();
        }
        
        function exportToCSV() {
            if (filteredSubmissions.length === 0) {
                alert('No submissions to export');
                return;
            }
            
            const headers = ['ID', 'Date', 'Name', 'Email', 'Phone', 'Type', 'Location', 'Urgency'];
            const rows = filteredSubmissions.map(sub => [
                sub.number || sub.id,
                new Date(sub.created_at).toISOString(),
                sub.data['contact-name'] || '',
                sub.data['contact-email'] || sub.email || '',
                sub.data['contact-phone'] || '',
                sub.form_name,
                sub.data.location || sub.data['form-location'] || '',
                sub.aiTags?.urgency || 'routine'
            ]);
            
            const csv = [headers, ...rows].map(row => row.join(',')).join('\n');
            const blob = new Blob([csv], { type: 'text/csv' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `sali-submissions-${new Date().toISOString().split('T')[0]}.csv`;
            a.click();
        }
        
        function logout() {
            sessionStorage.removeItem('adminAuth');
            window.location.href = '/admin/login';
        }
        
        // Event listeners
        document.getElementById('searchInput').addEventListener('input', applyFilters);
        document.getElementById('formTypeFilter').addEventListener('change', applyFilters);
        document.getElementById('urgencyFilter').addEventListener('change', applyFilters);
        document.getElementById('locationFilter').addEventListener('change', applyFilters);
        
        // Load data on page load
        loadSubmissions();
        
        // Auto-refresh every 60 seconds
        setInterval(loadSubmissions, 60000);
    </script>
</body>
</html>

